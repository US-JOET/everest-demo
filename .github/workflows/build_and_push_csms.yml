name: build_and_push_csms

on:
  pull_request:
    branches:
      - main
      - upgrade_**
  push:
    branches:
      - main
    tags:
      - 'v[0-9]+.[0-9]+.[0-9]+'

jobs:
  docker-build-and-push-images:
    runs-on: ubuntu-latest

    permissions:
      contents: read
      packages: write

    strategy:
      matrix:
        include:
          - csms: maeve
            csms_repo: louisg1337/maeve-csms
            csms_branch: set_charging_profile
#           - csms_dir: citrineos
#             csms_repo: https://github.com/citrineos/citrineos-core.git
#             csms_branch: feature/everest-demo

    steps:
      - name: Checkout this repo
        uses: actions/checkout@v4
        with:
            path: everest-demo

      - name: Ensure Docker image version is not referencing an existing release
        id: docker-image-version-check
        shell: bash
        run: |
          cd everest-demo
          if ! [[ -s '.env'  ]]; then
            echo 'Error: No .env file found.'
            exit 1
          fi

          if ! grep -qE '^TAG=' .env; then
            echo 'Error: .env must contain a TAG variable.'
            exit 1
          fi

          source .env

          # Fail if any previous Docker image version value matches the one in
          # this PR (excluding the current image version).
          for commit in $(git --no-pager log --first-parent --format=%H -- .env | tail -n +2); do
            if git --no-pager grep -hF "${TAG}" $commit -- .env | grep -qx ${TAG}; then
              echo 'Error: The version in .env matches an'
              echo '       earlier version on main. Please update the value in'
              echo '       .env to a new version.'
              exit 1
            fi
          done

          if git show-ref --tags --verify --quiet "refs/tags/v${TAG}"; then
            echo "Error: The tag 'v${TAG}' is already a GitHub release."
            echo '       Please update the version in .env'
            exit 1
          else
            echo "TAG=${TAG}" >> "${GITHUB_OUTPUT}"
          fi

      - name: Checkout the CSMS repo
        uses: actions/checkout@v4
        with:
            repository: ${{ matrix.csms_repo }}
            ref: ${{ matrix.csms_branch }}
            path: ${{ matrix.csms }}-csms

      - name: Configure CSMS
        id: configure-csms
        shell: bash
        run: |
            pushd ${{ matrix.csms }}-csms
            bash ../everest-demo/${{ matrix.csms }}/apply-patches.sh

      - name: Build using docker compose
        id: build-using-docker-compose
        shell: bash
        run: |
            echo "Using docker-compose instead of the build-and-push action since we don't have to duplicate the set of services in that case"
            pushd ${{ matrix.csms }}-csms
            docker compose build
            
      - name: List and export newly built images
        id: list-and-export-newly-built-images
        shell: bash
        run: |
            docker image list
